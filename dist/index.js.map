{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import puppeteer, { Page, Browser } from \"puppeteer\";\r\nimport treeKill from \"tree-kill\";\r\n\r\nimport blockedHostsList from \"./blocked-hosts\";\r\n\r\nimport {\r\n  getDurationInDays,\r\n  formatDate,\r\n  getCleanText,\r\n  getLocationFromText,\r\n  statusLog,\r\n  getHostname,\r\n} from \"./utils\";\r\nimport { SessionExpired } from \"./errors\";\r\n\r\nexport interface Location {\r\n  city: string | null;\r\n  province: string | null;\r\n  country: string | null;\r\n}\r\n\r\ninterface RawProfile {\r\n  fullName: string | null;\r\n  title: string | null;\r\n  location: string | null;\r\n  photo: string | null;\r\n  description: string | null;\r\n  url: string;\r\n}\r\n\r\nexport interface Profile {\r\n  fullName: string | null;\r\n  title: string | null;\r\n  location: Location | null;\r\n  photo: string | null;\r\n  description: string | null;\r\n  url: string;\r\n}\r\n\r\ninterface RawExperience {\r\n  title: string | null;\r\n  company: string | null;\r\n  employmentType: string | null;\r\n  location: string | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n  endDateIsPresent: boolean;\r\n  description: string | null;\r\n}\r\n\r\nexport interface Experience {\r\n  title: string | null;\r\n  company: string | null;\r\n  employmentType: string | null;\r\n  location: Location | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n  endDateIsPresent: boolean;\r\n  durationInDays: number | null;\r\n  description: string | null;\r\n}\r\n\r\ninterface RawEducation {\r\n  schoolName: string | null;\r\n  degreeName: string | null;\r\n  fieldOfStudy: string | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n}\r\n\r\nexport interface Education {\r\n  schoolName: string | null;\r\n  degreeName: string | null;\r\n  fieldOfStudy: string | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n  durationInDays: number | null;\r\n}\r\n\r\ninterface RawVolunteerExperience {\r\n  title: string | null;\r\n  company: string | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n  endDateIsPresent: boolean;\r\n  description: string | null;\r\n}\r\n\r\nexport interface VolunteerExperience {\r\n  title: string | null;\r\n  company: string | null;\r\n  startDate: string | null;\r\n  endDate: string | null;\r\n  endDateIsPresent: boolean;\r\n  durationInDays: number | null;\r\n  description: string | null;\r\n}\r\n\r\nexport interface Skill {\r\n  skillName: string | null;\r\n  endorsementCount: number | null;\r\n}\r\n\r\ninterface ScraperUserDefinedOptions {\r\n  /**\r\n   * The LinkedIn `li_at` session cookie value. Get this value by logging in to LinkedIn with the account you want to use for scraping.\r\n   * Open your browser's Dev Tools and find the cookie with the name `li_at`. Use that value here.\r\n   *\r\n   * This script uses a known session cookie of a successful login into LinkedIn, instead of an e-mail and password to set you logged in.\r\n   * I did this because LinkedIn has security measures by blocking login requests from unknown locations or requiring you to fill in Captcha's upon login.\r\n   * So, if you run this from a server and try to login with an e-mail address and password, your login could be blocked.\r\n   * By using a known session, we prevent this from happening and allows you to use this scraper on any server on any location.\r\n   *\r\n   * You probably need to get a new session cookie value when the scraper logs show it's not logged in anymore.\r\n   */\r\n  sessionCookieValue: string;\r\n  /**\r\n   * Set to true if you want to keep the scraper session alive. This results in faster recurring scrapes.\r\n   * But keeps your memory usage high.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  keepAlive?: boolean;\r\n  /**\r\n   * Set a custom user agent if you like.\r\n   *\r\n   * Default: `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36`\r\n   */\r\n  userAgent?: string;\r\n  /**\r\n   * Use a custom timeout to set the maximum time you want to wait for the scraper\r\n   * to do his job.\r\n   *\r\n   * Default: `10000` (10 seconds)\r\n   */\r\n  timeout?: number;\r\n  /**\r\n   * Start the scraper in headless mode, or not.\r\n   *\r\n   * Default: `true`\r\n   */\r\n  headless?: boolean;\r\n}\r\n\r\ninterface ScraperOptions {\r\n  sessionCookieValue: string;\r\n  keepAlive: boolean;\r\n  userAgent: string;\r\n  timeout: number;\r\n  headless: boolean;\r\n}\r\n\r\nasync function autoScroll(page: Page) {\r\n  await page.evaluate(() => {\r\n    return new Promise((resolve, reject) => {\r\n      var totalHeight = 0;\r\n      var distance = 500;\r\n      var timer = setInterval(() => {\r\n        var scrollHeight = document.body.scrollHeight;\r\n        window.scrollBy(0, distance);\r\n        totalHeight += distance;\r\n\r\n        if (totalHeight >= scrollHeight) {\r\n          clearInterval(timer);\r\n          // @ts-ignore\r\n          resolve();\r\n        }\r\n      }, 100);\r\n    });\r\n  });\r\n}\r\n\r\nexport class LinkedInProfileScraper {\r\n  readonly options: ScraperOptions = {\r\n    sessionCookieValue: \"\",\r\n    keepAlive: false,\r\n    timeout: 10000,\r\n    userAgent:\r\n      \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\",\r\n    headless: true,\r\n  };\r\n\r\n  private browser: Browser | null = null;\r\n\r\n  constructor(userDefinedOptions: ScraperUserDefinedOptions) {\r\n    const logSection = \"constructing\";\r\n    const errorPrefix = \"Error during setup.\";\r\n\r\n    if (!userDefinedOptions.sessionCookieValue) {\r\n      throw new Error(\r\n        `${errorPrefix} Option \"sessionCookieValue\" is required.`\r\n      );\r\n    }\r\n\r\n    if (\r\n      userDefinedOptions.sessionCookieValue &&\r\n      typeof userDefinedOptions.sessionCookieValue !== \"string\"\r\n    ) {\r\n      throw new Error(\r\n        `${errorPrefix} Option \"sessionCookieValue\" needs to be a string.`\r\n      );\r\n    }\r\n\r\n    if (\r\n      userDefinedOptions.userAgent &&\r\n      typeof userDefinedOptions.userAgent !== \"string\"\r\n    ) {\r\n      throw new Error(\r\n        `${errorPrefix} Option \"userAgent\" needs to be a string.`\r\n      );\r\n    }\r\n\r\n    if (\r\n      userDefinedOptions.keepAlive !== undefined &&\r\n      typeof userDefinedOptions.keepAlive !== \"boolean\"\r\n    ) {\r\n      throw new Error(\r\n        `${errorPrefix} Option \"keepAlive\" needs to be a boolean.`\r\n      );\r\n    }\r\n\r\n    if (\r\n      userDefinedOptions.timeout !== undefined &&\r\n      typeof userDefinedOptions.timeout !== \"number\"\r\n    ) {\r\n      throw new Error(`${errorPrefix} Option \"timeout\" needs to be a number.`);\r\n    }\r\n\r\n    if (\r\n      userDefinedOptions.headless !== undefined &&\r\n      typeof userDefinedOptions.headless !== \"boolean\"\r\n    ) {\r\n      throw new Error(\r\n        `${errorPrefix} Option \"headless\" needs to be a boolean.`\r\n      );\r\n    }\r\n\r\n    this.options = Object.assign(this.options, userDefinedOptions);\r\n\r\n    statusLog(logSection, `Using options: ${JSON.stringify(this.options)}`);\r\n  }\r\n\r\n  /**\r\n   * Method to load Puppeteer in memory so we can re-use the browser instance.\r\n   */\r\n  public setup = async () => {\r\n    const logSection = \"setup\";\r\n\r\n    try {\r\n      statusLog(\r\n        logSection,\r\n        `Launching puppeteer in the ${\r\n          this.options.headless ? \"background\" : \"foreground\"\r\n        }...`\r\n      );\r\n\r\n      this.browser = await puppeteer.launch({\r\n        headless: this.options.headless,\r\n        args: [\r\n          ...(this.options.headless\r\n            ? \"---single-process\"\r\n            : \"---start-maximized\"),\r\n          \"--no-sandbox\",\r\n          \"--disable-setuid-sandbox\",\r\n          \"--proxy-server='direct://\",\r\n          \"--proxy-bypass-list=*\",\r\n          \"--disable-dev-shm-usage\",\r\n          \"--disable-accelerated-2d-canvas\",\r\n          \"--disable-gpu\",\r\n          \"--disable-features=site-per-process\",\r\n          \"--enable-features=NetworkService\",\r\n          \"--allow-running-insecure-content\",\r\n          \"--enable-automation\",\r\n          \"--disable-background-timer-throttling\",\r\n          \"--disable-backgrounding-occluded-windows\",\r\n          \"--disable-renderer-backgrounding\",\r\n          \"--disable-web-security\",\r\n          \"--autoplay-policy=user-gesture-required\",\r\n          \"--disable-background-networking\",\r\n          \"--disable-breakpad\",\r\n          \"--disable-client-side-phishing-detection\",\r\n          \"--disable-component-update\",\r\n          \"--disable-default-apps\",\r\n          \"--disable-domain-reliability\",\r\n          \"--disable-extensions\",\r\n          \"--disable-features=AudioServiceOutOfProcess\",\r\n          \"--disable-hang-monitor\",\r\n          \"--disable-ipc-flooding-protection\",\r\n          \"--disable-notifications\",\r\n          \"--disable-offer-store-unmasked-wallet-cards\",\r\n          \"--disable-popup-blocking\",\r\n          \"--disable-print-preview\",\r\n          \"--disable-prompt-on-repost\",\r\n          \"--disable-speech-api\",\r\n          \"--disable-sync\",\r\n          \"--disk-cache-size=33554432\",\r\n          \"--hide-scrollbars\",\r\n          \"--ignore-gpu-blacklist\",\r\n          \"--metrics-recording-only\",\r\n          \"--mute-audio\",\r\n          \"--no-default-browser-check\",\r\n          \"--no-first-run\",\r\n          \"--no-pings\",\r\n          \"--no-zygote\",\r\n          \"--password-store=basic\",\r\n          \"--use-gl=swiftshader\",\r\n          \"--use-mock-keychain\",\r\n        ],\r\n        timeout: this.options.timeout,\r\n      });\r\n\r\n      statusLog(logSection, \"Puppeteer launched!\");\r\n\r\n      await this.checkIfLoggedIn();\r\n\r\n      statusLog(logSection, \"Done!\");\r\n    } catch (err) {\r\n      // Kill Puppeteer\r\n      await this.close();\r\n\r\n      statusLog(logSection, \"An error occurred during setup.\");\r\n\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create a Puppeteer page with some extra settings to speed up the crawling process.\r\n   */\r\n  private createPage = async (): Promise<Page> => {\r\n    const logSection = \"setup page\";\r\n\r\n    if (!this.browser) {\r\n      throw new Error(\"Browser not set.\");\r\n    }\r\n\r\n    // Important: Do not block \"stylesheet\", makes the crawler not work for LinkedIn\r\n    const blockedResources = [\r\n      \"image\",\r\n      \"media\",\r\n      \"font\",\r\n      \"texttrack\",\r\n      \"object\",\r\n      \"beacon\",\r\n      \"csp_report\",\r\n      \"imageset\",\r\n    ];\r\n\r\n    try {\r\n      const page = await this.browser.newPage();\r\n\r\n      // Use already open page\r\n      // This makes sure we don't have an extra open tab consuming memory\r\n      const firstPage = (await this.browser.pages())[0];\r\n      await firstPage.close();\r\n\r\n      // Method to create a faster Page\r\n      // From: https://github.com/shirshak55/scrapper-tools/blob/master/src/fastPage/index.ts#L113\r\n      const session = await page.target().createCDPSession();\r\n      await page.setBypassCSP(true);\r\n      await session.send(\"Page.enable\");\r\n      await session.send(\"Page.setWebLifecycleState\", {\r\n        state: \"active\",\r\n      });\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Blocking the following resources: ${blockedResources.join(\", \")}`\r\n      );\r\n\r\n      // A list of hostnames that are trackers\r\n      // By blocking those requests we can speed up the crawling\r\n      // This is kinda what a normal adblocker does, but really simple\r\n      const blockedHosts = this.getBlockedHosts();\r\n      const blockedResourcesByHost = [\"script\", \"xhr\", \"fetch\", \"document\"];\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Should block scripts from ${\r\n          Object.keys(blockedHosts).length\r\n        } unwanted hosts to speed up the crawling.`\r\n      );\r\n\r\n      // Block loading of resources, like images and css, we dont need that\r\n      await page.setRequestInterception(true);\r\n\r\n      page.on(\"request\", (req) => {\r\n        if (blockedResources.includes(req.resourceType())) {\r\n          return req.abort();\r\n        }\r\n\r\n        const hostname = getHostname(req.url());\r\n\r\n        // Block all script requests from certain host names\r\n        if (\r\n          blockedResourcesByHost.includes(req.resourceType()) &&\r\n          hostname &&\r\n          blockedHosts[hostname] === true\r\n        ) {\r\n          statusLog(\r\n            \"blocked script\",\r\n            `${req.resourceType()}: ${hostname}: ${req.url()}`\r\n          );\r\n          return req.abort();\r\n        }\r\n\r\n        return req.continue();\r\n      });\r\n\r\n      await page.setUserAgent(this.options.userAgent);\r\n\r\n      await page.setViewport({\r\n        width: 1200,\r\n        height: 720,\r\n      });\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Setting session cookie using cookie: ${process.env.LINKEDIN_SESSION_COOKIE_VALUE}`\r\n      );\r\n\r\n      await page.setCookie({\r\n        name: \"li_at\",\r\n        value: this.options.sessionCookieValue,\r\n        domain: \".www.linkedin.com\",\r\n      });\r\n\r\n      statusLog(logSection, \"Session cookie set!\");\r\n\r\n      statusLog(logSection, \"Done!\");\r\n\r\n      return page;\r\n    } catch (err) {\r\n      // Kill Puppeteer\r\n      await this.close();\r\n\r\n      statusLog(logSection, \"An error occurred during page setup.\");\r\n      statusLog(logSection, err.message);\r\n\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method to block know hosts that have some kind of tracking.\r\n   * By blocking those hosts we speed up the crawling.\r\n   *\r\n   * More info: http://winhelp2002.mvps.org/hosts.htm\r\n   */\r\n  private getBlockedHosts = (): object => {\r\n    const blockedHostsArray = blockedHostsList.split(\"\\n\");\r\n\r\n    let blockedHostsObject = blockedHostsArray.reduce((prev, curr) => {\r\n      const frags = curr.split(\" \");\r\n\r\n      if (frags.length > 1 && frags[0] === \"0.0.0.0\") {\r\n        prev[frags[1].trim()] = true;\r\n      }\r\n\r\n      return prev;\r\n    }, {});\r\n\r\n    blockedHostsObject = {\r\n      ...blockedHostsObject,\r\n      \"static.chartbeat.com\": true,\r\n      \"scdn.cxense.com\": true,\r\n      \"api.cxense.com\": true,\r\n      \"www.googletagmanager.com\": true,\r\n      \"connect.facebook.net\": true,\r\n      \"platform.twitter.com\": true,\r\n      \"tags.tiqcdn.com\": true,\r\n      \"dev.visualwebsiteoptimizer.com\": true,\r\n      \"smartlock.google.com\": true,\r\n      \"cdn.embedly.com\": true,\r\n    };\r\n\r\n    return blockedHostsObject;\r\n  };\r\n\r\n  /**\r\n   * Method to complete kill any Puppeteer process still active.\r\n   * Freeing up memory.\r\n   */\r\n  public close = (page?: Page): Promise<void> => {\r\n    return new Promise(async (resolve, reject) => {\r\n      const loggerPrefix = \"close\";\r\n\r\n      if (page) {\r\n        try {\r\n          statusLog(loggerPrefix, \"Closing page...\");\r\n          await page.close();\r\n          statusLog(loggerPrefix, \"Closed page!\");\r\n        } catch (err) {\r\n          reject(err);\r\n        }\r\n      }\r\n\r\n      if (this.browser) {\r\n        try {\r\n          statusLog(loggerPrefix, \"Closing browser...\");\r\n          await this.browser.close();\r\n          statusLog(loggerPrefix, \"Closed browser!\");\r\n\r\n          const browserProcessPid = this.browser.process().pid;\r\n\r\n          // Completely kill the browser process to prevent zombie processes\r\n          // https://docs.browserless.io/blog/2019/03/13/more-observations.html#tip-2-when-you-re-done-kill-it-with-fire\r\n          if (browserProcessPid) {\r\n            statusLog(\r\n              loggerPrefix,\r\n              `Killing browser process pid: ${browserProcessPid}...`\r\n            );\r\n\r\n            treeKill(browserProcessPid, \"SIGKILL\", (err) => {\r\n              if (err) {\r\n                return reject(\r\n                  `Failed to kill browser process pid: ${browserProcessPid}`\r\n                );\r\n              }\r\n\r\n              statusLog(\r\n                loggerPrefix,\r\n                `Killed browser pid: ${browserProcessPid} Closed browser.`\r\n              );\r\n              resolve();\r\n            });\r\n          }\r\n        } catch (err) {\r\n          reject(err);\r\n        }\r\n      }\r\n\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Simple method to check if the session is still active.\r\n   */\r\n  public checkIfLoggedIn = async () => {\r\n    const logSection = \"checkIfLoggedIn\";\r\n\r\n    const page = await this.createPage();\r\n\r\n    statusLog(logSection, \"Checking if we are still logged in...\");\r\n\r\n    // Go to the login page of LinkedIn\r\n    // If we do not get redirected and stay on /login, we are logged out\r\n    // If we get redirect to /feed, we are logged in\r\n    await page.goto(\"https://www.linkedin.com/login\", {\r\n      waitUntil: \"networkidle2\",\r\n      timeout: this.options.timeout,\r\n    });\r\n\r\n    const url = page.url();\r\n\r\n    const isLoggedIn = !url.endsWith(\"/login\");\r\n\r\n    await page.close();\r\n\r\n    if (isLoggedIn) {\r\n      statusLog(logSection, \"All good. We are still logged in.\");\r\n    } else {\r\n      const errorMessage =\r\n        'Bad news, we are not logged in! Your session seems to be expired. Use your browser to login again with your LinkedIn credentials and extract the \"li_at\" cookie value for the \"sessionCookieValue\" option.';\r\n      statusLog(logSection, errorMessage);\r\n      throw new SessionExpired(errorMessage);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Method to scrape a user profile.\r\n   */\r\n  public run = async (profileUrl: string) => {\r\n    const logSection = \"run\";\r\n\r\n    const scraperSessionId = new Date().getTime();\r\n\r\n    if (!this.browser) {\r\n      throw new Error(\"Browser is not set. Please run the setup method first.\");\r\n    }\r\n\r\n    if (!profileUrl) {\r\n      throw new Error(\"No profileUrl given.\");\r\n    }\r\n\r\n    if (!profileUrl.includes(\"linkedin.com/\")) {\r\n      throw new Error(\"The given URL to scrape is not a linkedin.com url.\");\r\n    }\r\n\r\n    try {\r\n      // Eeach run has it's own page\r\n      const page = await this.createPage();\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Navigating to LinkedIn profile: ${profileUrl}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      await page.goto(profileUrl, {\r\n        // Use \"networkidl2\" here and not \"domcontentloaded\".\r\n        // As with \"domcontentloaded\" some elements might not be loaded correctly, resulting in missing data.\r\n        waitUntil: \"networkidle2\",\r\n        timeout: this.options.timeout,\r\n      });\r\n\r\n      statusLog(logSection, \"LinkedIn profile page loaded!\", scraperSessionId);\r\n\r\n      statusLog(\r\n        logSection,\r\n        \"Getting all the LinkedIn profile data by scrolling the page to the bottom, so all the data gets loaded into the page...\",\r\n        scraperSessionId\r\n      );\r\n\r\n      await autoScroll(page);\r\n\r\n      statusLog(logSection, \"Parsing data...\", scraperSessionId);\r\n\r\n      // Only click the expanding buttons when they exist\r\n      const expandButtonsSelectors = [\r\n        \".pv-profile-section.pv-about-section .lt-line-clamp__more\", // About\r\n        \"#experience-section .pv-profile-section__see-more-inline.link\", // Experience\r\n        \".pv-profile-section.education-section button.pv-profile-section__see-more-inline\", // Education\r\n        '.pv-skill-categories-section [data-control-name=\"skill_details\"]', // Skills\r\n      ];\r\n\r\n      const seeMoreButtonsSelectors = [\r\n        '.pv-entity__description .lt-line-clamp__line.lt-line-clamp__line--last .lt-line-clamp__more[href=\"#\"]',\r\n        '.lt-line-clamp__more[href=\"#\"]:not(.lt-line-clamp__ellipsis--dummy)',\r\n      ];\r\n\r\n      statusLog(\r\n        logSection,\r\n        'Expanding all sections by clicking their \"See more\" buttons',\r\n        scraperSessionId\r\n      );\r\n\r\n      for (const buttonSelector of expandButtonsSelectors) {\r\n        try {\r\n          if ((await page.$(buttonSelector)) !== null) {\r\n            statusLog(\r\n              logSection,\r\n              `Clicking button ${buttonSelector}`,\r\n              scraperSessionId\r\n            );\r\n            await page.click(buttonSelector);\r\n          }\r\n        } catch (err) {\r\n          statusLog(\r\n            logSection,\r\n            `Could not find or click expand button selector \"${buttonSelector}\". So we skip that one.`,\r\n            scraperSessionId\r\n          );\r\n        }\r\n      }\r\n\r\n      // To give a little room to let data appear. Setting this to 0 might result in \"Node is detached from document\" errors\r\n      await page.waitFor(100);\r\n\r\n      statusLog(\r\n        logSection,\r\n        'Expanding all descriptions by clicking their \"See more\" buttons',\r\n        scraperSessionId\r\n      );\r\n\r\n      for (const seeMoreButtonSelector of seeMoreButtonsSelectors) {\r\n        const buttons = await page.$$(seeMoreButtonSelector);\r\n\r\n        for (const button of buttons) {\r\n          if (button) {\r\n            try {\r\n              statusLog(\r\n                logSection,\r\n                `Clicking button ${seeMoreButtonSelector}`,\r\n                scraperSessionId\r\n              );\r\n              await button.click();\r\n            } catch (err) {\r\n              statusLog(\r\n                logSection,\r\n                `Could not find or click see more button selector \"${button}\". So we skip that one.`,\r\n                scraperSessionId\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      statusLog(logSection, \"Parsing profile data...\", scraperSessionId);\r\n\r\n      const rawUserProfileData: RawProfile = await page.evaluate(() => {\r\n        const profileSection = document.querySelector(\".pv-top-card\");\r\n\r\n        const url = window.location.href;\r\n\r\n        const fullNameElement = profileSection?.querySelector(\r\n          \".pv-top-card--list li:first-child\"\r\n        );\r\n        const fullName = fullNameElement?.textContent || null;\r\n\r\n        const titleElement = profileSection?.querySelector(\"h2\");\r\n        const title = titleElement?.textContent || null;\r\n\r\n        const locationElement = profileSection?.querySelector(\r\n          \".pv-top-card--list.pv-top-card--list-bullet.mt1 li:first-child\"\r\n        );\r\n        const location = locationElement?.textContent || null;\r\n\r\n        const photoElement =\r\n          profileSection?.querySelector(\".pv-top-card__photo\") ||\r\n          profileSection?.querySelector(\".profile-photo-edit__preview\");\r\n        const photo = photoElement?.getAttribute(\"src\") || null;\r\n\r\n        const descriptionElement = document.querySelector(\r\n          \".pv-about__summary-text .lt-line-clamp__raw-line\"\r\n        ); // Is outside \"profileSection\"\r\n        const description = descriptionElement?.textContent || null;\r\n\r\n        return {\r\n          fullName,\r\n          title,\r\n          location,\r\n          photo,\r\n          description,\r\n          url,\r\n        } as RawProfile;\r\n      });\r\n\r\n      // Convert the raw data to clean data using our utils\r\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\r\n      const userProfile: Profile = {\r\n        ...rawUserProfileData,\r\n        fullName: getCleanText(rawUserProfileData.fullName),\r\n        title: getCleanText(rawUserProfileData.title),\r\n        location: rawUserProfileData.location\r\n          ? getLocationFromText(rawUserProfileData.location)\r\n          : null,\r\n        description: getCleanText(rawUserProfileData.description),\r\n      };\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Got user profile data: ${JSON.stringify(userProfile)}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      statusLog(logSection, `Parsing experiences data...`, scraperSessionId);\r\n\r\n      const rawExperiencesData: RawExperience[] = await page.$$eval(\r\n        \"#experience-section ul > .ember-view\",\r\n        (nodes) => {\r\n          let data: RawExperience[] = [];\r\n\r\n          // Using a for loop so we can use await inside of it\r\n          for (const node of nodes) {\r\n            const titleElement = node.querySelector(\"h3\");\r\n            const title = titleElement?.textContent || null;\r\n\r\n            const employmentTypeElement = node.querySelector(\r\n              \"span.pv-entity__secondary-title\"\r\n            );\r\n            const employmentType = employmentTypeElement?.textContent || null;\r\n\r\n            const companyElement = node.querySelector(\r\n              \".pv-entity__secondary-title\"\r\n            );\r\n            const companyElementClean =\r\n              companyElement && companyElement?.querySelector(\"span\")\r\n                ? companyElement?.removeChild(\r\n                    companyElement.querySelector(\"span\") as Node\r\n                  ) && companyElement\r\n                : companyElement || null;\r\n            const company = companyElementClean?.textContent || null;\r\n\r\n            const descriptionElement = node.querySelector(\r\n              \".pv-entity__description\"\r\n            );\r\n            const description = descriptionElement?.textContent || null;\r\n\r\n            const dateRangeElement = node.querySelector(\r\n              \".pv-entity__date-range span:nth-child(2)\"\r\n            );\r\n            const dateRangeText = dateRangeElement?.textContent || null;\r\n\r\n            const startDatePart = dateRangeText?.split(\"–\")[0] || null;\r\n            const startDate = startDatePart?.trim() || null;\r\n\r\n            const endDatePart = dateRangeText?.split(\"–\")[1] || null;\r\n            const endDateIsPresent =\r\n              endDatePart?.trim().toLowerCase() === \"present\" || false;\r\n            const endDate =\r\n              endDatePart && !endDateIsPresent ? endDatePart.trim() : \"Present\";\r\n\r\n            const locationElement = node.querySelector(\r\n              \".pv-entity__location span:nth-child(2)\"\r\n            );\r\n            const location = locationElement?.textContent || null;\r\n\r\n            data.push({\r\n              title,\r\n              company,\r\n              employmentType,\r\n              location,\r\n              startDate,\r\n              endDate,\r\n              endDateIsPresent,\r\n              description,\r\n            });\r\n          }\r\n\r\n          return data;\r\n        }\r\n      );\r\n\r\n      // Convert the raw data to clean data using our utils\r\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\r\n      const experiences: Experience[] = rawExperiencesData.map(\r\n        (rawExperience) => {\r\n          const startDate = formatDate(rawExperience.startDate);\r\n          const endDate = formatDate(rawExperience.endDate) || null;\r\n          const endDateIsPresent = rawExperience.endDateIsPresent;\r\n\r\n          const durationInDaysWithEndDate =\r\n            startDate && endDate && !endDateIsPresent\r\n              ? getDurationInDays(startDate, endDate)\r\n              : null;\r\n          const durationInDaysForPresentDate =\r\n            endDateIsPresent && startDate\r\n              ? getDurationInDays(startDate, new Date())\r\n              : null;\r\n          const durationInDays = endDateIsPresent\r\n            ? durationInDaysForPresentDate\r\n            : durationInDaysWithEndDate;\r\n\r\n          return {\r\n            ...rawExperience,\r\n            title: getCleanText(rawExperience.title),\r\n            company: getCleanText(rawExperience.company),\r\n            employmentType: getCleanText(rawExperience.employmentType),\r\n            location: rawExperience?.location\r\n              ? getLocationFromText(rawExperience.location)\r\n              : null,\r\n            startDate,\r\n            endDate,\r\n            endDateIsPresent,\r\n            durationInDays,\r\n            description: getCleanText(rawExperience.description),\r\n          };\r\n        }\r\n      );\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Got experiences data: ${JSON.stringify(experiences)}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      statusLog(logSection, `Parsing education data...`, scraperSessionId);\r\n\r\n      const rawEducationData: RawEducation[] = await page.$$eval(\r\n        \"#education-section ul > .ember-view\",\r\n        (nodes) => {\r\n          // Note: the $$eval context is the browser context.\r\n          // So custom methods you define in this file are not available within this $$eval.\r\n          let data: RawEducation[] = [];\r\n          for (const node of nodes) {\r\n            const schoolNameElement = node.querySelector(\r\n              \"h3.pv-entity__school-name\"\r\n            );\r\n            const schoolName = schoolNameElement?.textContent || null;\r\n\r\n            const degreeNameElement = node.querySelector(\r\n              \".pv-entity__degree-name .pv-entity__comma-item\"\r\n            );\r\n            const degreeName = degreeNameElement?.textContent || null;\r\n\r\n            const fieldOfStudyElement = node.querySelector(\r\n              \".pv-entity__fos .pv-entity__comma-item\"\r\n            );\r\n            const fieldOfStudy = fieldOfStudyElement?.textContent || null;\r\n\r\n            // const gradeElement = node.querySelector('.pv-entity__grade .pv-entity__comma-item');\r\n            // const grade = (gradeElement && gradeElement.textContent) ? window.getCleanText(fieldOfStudyElement.textContent) : null;\r\n\r\n            const dateRangeElement = node.querySelectorAll(\r\n              \".pv-entity__dates time\"\r\n            );\r\n\r\n            const startDatePart =\r\n              (dateRangeElement && dateRangeElement[0]?.textContent) || null;\r\n            const startDate = startDatePart || null;\r\n\r\n            const endDatePart =\r\n              (dateRangeElement && dateRangeElement[1]?.textContent) || null;\r\n            const endDate = endDatePart || null;\r\n\r\n            data.push({\r\n              schoolName,\r\n              degreeName,\r\n              fieldOfStudy,\r\n              startDate,\r\n              endDate,\r\n            });\r\n          }\r\n\r\n          return data;\r\n        }\r\n      );\r\n\r\n      // Convert the raw data to clean data using our utils\r\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\r\n      const education: Education[] = rawEducationData.map((rawEducation) => {\r\n        const startDate = formatDate(rawEducation.startDate);\r\n        const endDate = formatDate(rawEducation.endDate);\r\n\r\n        return {\r\n          ...rawEducation,\r\n          schoolName: getCleanText(rawEducation.schoolName),\r\n          degreeName: getCleanText(rawEducation.degreeName),\r\n          fieldOfStudy: getCleanText(rawEducation.fieldOfStudy),\r\n          startDate,\r\n          endDate,\r\n          durationInDays: getDurationInDays(startDate, endDate),\r\n        };\r\n      });\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Got education data: ${JSON.stringify(education)}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Parsing volunteer experience data...`,\r\n        scraperSessionId\r\n      );\r\n\r\n      const rawVolunteerExperiences: RawVolunteerExperience[] =\r\n        await page.$$eval(\r\n          \".pv-profile-section.volunteering-section ul > li.ember-view\",\r\n          (nodes) => {\r\n            // Note: the $$eval context is the browser context.\r\n            // So custom methods you define in this file are not available within this $$eval.\r\n            let data: RawVolunteerExperience[] = [];\r\n            for (const node of nodes) {\r\n              const titleElement = node.querySelector(\r\n                \".pv-entity__summary-info h3\"\r\n              );\r\n              const title = titleElement?.textContent || null;\r\n\r\n              const companyElement = node.querySelector(\r\n                \".pv-entity__summary-info span.pv-entity__secondary-title\"\r\n              );\r\n              const company = companyElement?.textContent || null;\r\n\r\n              const dateRangeElement = node.querySelector(\r\n                \".pv-entity__date-range span:nth-child(2)\"\r\n              );\r\n              const dateRangeText = dateRangeElement?.textContent || null;\r\n              const startDatePart = dateRangeText?.split(\"–\")[0] || null;\r\n              const startDate = startDatePart?.trim() || null;\r\n\r\n              const endDatePart = dateRangeText?.split(\"–\")[1] || null;\r\n              const endDateIsPresent =\r\n                endDatePart?.trim().toLowerCase() === \"present\" || false;\r\n              const endDate =\r\n                endDatePart && !endDateIsPresent\r\n                  ? endDatePart.trim()\r\n                  : \"Present\";\r\n\r\n              const descriptionElement = node.querySelector(\r\n                \".pv-entity__description\"\r\n              );\r\n              const description = descriptionElement?.textContent || null;\r\n\r\n              data.push({\r\n                title,\r\n                company,\r\n                startDate,\r\n                endDate,\r\n                endDateIsPresent,\r\n                description,\r\n              });\r\n            }\r\n\r\n            return data;\r\n          }\r\n        );\r\n\r\n      // Convert the raw data to clean data using our utils\r\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\r\n      const volunteerExperiences: VolunteerExperience[] =\r\n        rawVolunteerExperiences.map((rawVolunteerExperience) => {\r\n          const startDate = formatDate(rawVolunteerExperience.startDate);\r\n          const endDate = formatDate(rawVolunteerExperience.endDate);\r\n\r\n          return {\r\n            ...rawVolunteerExperience,\r\n            title: getCleanText(rawVolunteerExperience.title),\r\n            company: getCleanText(rawVolunteerExperience.company),\r\n            description: getCleanText(rawVolunteerExperience.description),\r\n            startDate,\r\n            endDate,\r\n            durationInDays: getDurationInDays(startDate, endDate),\r\n          };\r\n        });\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Got volunteer experience data: ${JSON.stringify(\r\n          volunteerExperiences\r\n        )}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      statusLog(logSection, `Parsing skills data...`, scraperSessionId);\r\n\r\n      const skills: Skill[] = await page.$$eval(\r\n        \".pv-skill-categories-section ol > .ember-view\",\r\n        (nodes) => {\r\n          // Note: the $$eval context is the browser context.\r\n          // So custom methods you define in this file are not available within this $$eval.\r\n\r\n          return nodes.map((node) => {\r\n            const skillName = node.querySelector(\r\n              \".pv-skill-category-entity__name-text\"\r\n            );\r\n            const endorsementCount = node.querySelector(\r\n              \".pv-skill-category-entity__endorsement-count\"\r\n            );\r\n\r\n            return {\r\n              skillName: skillName ? skillName.textContent?.trim() : null,\r\n              endorsementCount: endorsementCount\r\n                ? parseInt(endorsementCount.textContent?.trim() || \"0\")\r\n                : 0,\r\n            } as Skill;\r\n          }) as Skill[];\r\n        }\r\n      );\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Got skills data: ${JSON.stringify(skills)}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      statusLog(\r\n        logSection,\r\n        `Done! Returned profile details for: ${profileUrl}`,\r\n        scraperSessionId\r\n      );\r\n\r\n      if (!this.options.keepAlive) {\r\n        statusLog(logSection, \"Not keeping the session alive.\");\r\n\r\n        await this.close(page);\r\n\r\n        statusLog(logSection, \"Done. Puppeteer is closed.\");\r\n      } else {\r\n        statusLog(logSection, \"Done. Puppeteer is being kept alive in memory.\");\r\n\r\n        // Only close the current page, we do not need it anymore\r\n        await page.close();\r\n      }\r\n\r\n      return {\r\n        userProfile,\r\n        experiences,\r\n        education,\r\n        volunteerExperiences,\r\n        skills,\r\n      };\r\n    } catch (err) {\r\n      // Kill Puppeteer\r\n      await this.close();\r\n\r\n      statusLog(logSection, \"An error occurred during a run.\");\r\n\r\n      // Throw the error up, allowing the user to handle this error himself.\r\n      throw err;\r\n    }\r\n  };\r\n}\r\n"]}